outputDir: Scans/Resonant_syst_newalgo_comparison_FR2

combine: 
   limits_DL: limits

canvas:  &canvas
    SetWindowSize: [600,600]
    SetLeftMargin: 0.15
    SetRightMargin: 0.05
    SetTopMargin: 0.06
    SetBottomMargin: 0.15
    SetLogy: True
    #SetGridx: True 
    #SetGridy: True
    SetTickx: True
    SetTicky: True

limit_header: &limit_header
    - text: 'CMS'
      options: 
          SetNDC: True
          SetX: 0.18
          SetY: 0.86
          SetTextFont: 62
          SetTextSize: 0.07
    - text: 'Preliminary'
      options: 
          SetNDC: True
          SetX: 0.18
          SetY: 0.81
          SetTextFont: 62
          SetTextSize: 0.05
    - text: '138 fb^{-1} (13 TeV)'
      options: 
          SetNDC: True
          SetX: 0.72
          SetY: 0.95
          SetTextFont: 42
          SetTextSize: 0.04


plots:
  # MULTI LIMITS PLOTS #
  - name: limits_spin2_DL
    title: ''
    options: 
        canvas: *canvas
        lines:  
            SetLineWidth: 2
            GetXaxis.SetTitle: 'm_{X} (GeV)'
            GetXaxis.SetTitleFont: 42
            GetXaxis.SetTitleSize: 0.05
            GetXaxis.SetTitleOffset: 1.1
            GetXaxis.SetLabelSize: 0.05
            GetYaxis.SetTitle: '#sigma x B(X#rightarrow HH #rightarrow bbWW) [pb]'
            GetYaxis.SetTitleSize: 0.05
            GetYaxis.SetTitleFont: 42
            GetYaxis.SetTitleOffset: 1.2
            GetYaxis.SetLabelSize: 0.05
            GetYaxis.SetRangeUser: [0.03,40]
        legend: 
            SetX1: 0.50
            SetX2: 0.88
            SetY1: 0.55
            SetY2: 0.9
            SetFillColor: 0
            SetTextFont: 42
            SetTextSize: 0.022
            SetBorderSize: 0
    curves: 
      "old algo 2016":  ["1D old algo","limits_DL","combination_2016"]
      "old algo 2017":  ["1D old algo","limits_DL","combination_2017"]
      "old algo 2018":  ["1D old algo","limits_DL","combination_2018"]
      "old algo FR2 ":  ["1D old algo","limits_DL","combination"]
      "new algo 2016":  ["1D new algo","limits_DL","combination_2016"]
      "new algo 2017":  ["1D new algo","limits_DL","combination_2017"]
      "new algo 2018":  ["1D new algo","limits_DL","combination_2018"]
      "new algo FR2 ":  ["1D new algo","limits_DL","combination"]
      "new algo 2016 boosted":  ["1D new algo boosted","limits_DL","combination_2016"]
      "new algo 2017 boosted":  ["1D new algo boosted","limits_DL","combination_2017"]
      "new algo 2018 boosted":  ["1D new algo boosted","limits_DL","combination_2018"]
      "new algo FR2  boosted":  ["1D new algo boosted","limits_DL","combination"]
    legend:
      "old algo 2016":  "Old algo 2016 (resolved 15 bins, boosted 5 bins)"
      "old algo 2017":  "Old algo 2017 (resolved 15 bins, boosted 5 bins)"
      "old algo 2018":  "Old algo 2018 (resolved 15 bins, boosted 5 bins)"
      "old algo FR2 ":  "Old algo FR2  (resolved 15 bins, boosted 5 bins)"
      "new algo 2016":  "New algo 2016 (resolved 15 bins, boosted 5 bins)"
      "new algo 2017":  "New algo 2017 (resolved 15 bins, boosted 5 bins)"
      "new algo 2018":  "New algo 2018 (resolved 15 bins, boosted 5 bins)"
      "new algo FR2 ":  "New algo FR2  (resolved 15 bins, boosted 5 bins)"
      "new algo 2016 boosted":  "New algo 2016 (resolved 20 bins, boosted 20 bins)"
      "new algo 2017 boosted":  "New algo 2017 (resolved 20 bins, boosted 20 bins)"
      "new algo 2018 boosted":  "New algo 2018 (resolved 20 bins, boosted 20 bins)"
      "new algo FR2  boosted":  "New algo FR2  (resolved 20 bins, boosted 20 bins)"
    lines:
      "old algo 2016":  {'SetLineStyle': 1,'SetLineColor': '#D81B60'} 
      "old algo 2017":  {'SetLineStyle': 1,'SetLineColor': '#1E88E5'}
      "old algo 2018":  {'SetLineStyle': 1,'SetLineColor': '#FFC107'}
      "old algo FR2 ":  {'SetLineStyle': 1,'SetLineColor': '#004D40'}
      "new algo 2016":  {'SetLineStyle': 2,'SetLineColor': '#D81B60'}
      "new algo 2017":  {'SetLineStyle': 2,'SetLineColor': '#1E88E5'}
      "new algo 2018":  {'SetLineStyle': 2,'SetLineColor': '#FFC107'}
      "new algo FR2 ":  {'SetLineStyle': 2,'SetLineColor': '#004D40'}
      "new algo 2016 boosted":  {'SetLineStyle': 3,'SetLineColor': '#D81B60'}
      "new algo 2017 boosted":  {'SetLineStyle': 3,'SetLineColor': '#1E88E5'}
      "new algo 2018 boosted":  {'SetLineStyle': 3,'SetLineColor': '#FFC107'}
      "new algo FR2  boosted": {'SetLineStyle': 3,'SetLineColor': '#004D40'}
curves:
  #########################################################################
  #                              Graviton 1D                              #
  #########################################################################
    1D old algo:
        modes: 
            limits_DL:
                - combination
                - combination_2016
                - combination_2017
                - combination_2018
        points:
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=260 branch=LowMass
              label: 260
              custom: {mass: 260}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=270 branch=LowMass
              label: 270
              custom: {mass: 270}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=300 branch=LowMass
              label: 300
              custom: {mass: 300}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=350 branch=LowMass
              label: 350
              custom: {mass: 350}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=400 branch=LowMass
              label: 400
              custom: {mass: 400}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=450 branch=LowMass 
              label: 450 
              custom: {mass: 450}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=500 branch=LowMass 
              label: 500
              custom: {mass: 500}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=600 branch=HighMass
              label: 600
              custom: {mass: 600}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=650 branch=HighMass 
              label: 650
              custom: {mass: 650}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=700 branch=HighMass 
              label: 700
              custom: {mass: 700}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=800 branch=HighMass  
              label: 800
              custom: {mass: 800}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=900 branch=HighMass  
              label: 900
              custom: {mass: 900}

    1D new algo:
        modes: 
            limits_DL:
                - combination
                - combination_2016
                - combination_2017
                - combination_2018
        points:
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=260 branch=LowMass
              label: 260
              custom: {mass: 260}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=270 branch=LowMass
              label: 270
              custom: {mass: 270}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=300 branch=LowMass
              label: 300
              custom: {mass: 300}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=350 branch=LowMass
              label: 350
              custom: {mass: 350}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=400 branch=LowMass
              label: 400
              custom: {mass: 400}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=450 branch=LowMass 
              label: 450 
              custom: {mass: 450}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=500 branch=LowMass 
              label: 500
              custom: {mass: 500}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=600 branch=HighMass
              label: 600
              custom: {mass: 600}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=650 branch=HighMass 
              label: 650
              custom: {mass: 650}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=700 branch=HighMass 
              label: 700
              custom: {mass: 700}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=800 branch=HighMass  
              label: 800
              custom: {mass: 800}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=900 branch=HighMass  
              label: 900
              custom: {mass: 900}
 
    1D new algo boosted:
        modes: 
            limits_DL:
                - combination
                - combination_2016
                - combination_2017
                - combination_2018
        points:
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=260 branch=LowMass
              label: 260
              custom: {mass: 260}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=270 branch=LowMass
              label: 270
              custom: {mass: 270}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=300 branch=LowMass
              label: 300
              custom: {mass: 300}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=350 branch=LowMass
              label: 350
              custom: {mass: 350}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=400 branch=LowMass
              label: 400
              custom: {mass: 400}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=450 branch=LowMass 
              label: 450 
              custom: {mass: 450}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=500 branch=LowMass 
              label: 500
              custom: {mass: 500}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=600 branch=HighMass
              label: 600
              custom: {mass: 600}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=650 branch=HighMass 
              label: 650
              custom: {mass: 650}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=700 branch=HighMass 
              label: 700
              custom: {mass: 700}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=800 branch=HighMass  
              label: 800
              custom: {mass: 800}
            - command: python produceDataCards.py --yaml config/datacard_fit_Resonant_syst_M_base_newalgo2_FR2.yml  --split --submit time=0-08:00:00  mem-per-cpu=9000 --custom dim=1D spin=spin2 mass=900 branch=HighMass  
              label: 900
              custom: {mass: 900}
 
