from bamboo import treefunctions as op

from highlevelLambdas import highlevelLambdas
import random 
#from bamboo.root import loadHeader
#loadHeader("/home/ucl/cp3/gsaha/bamboodev/HHbbWWAnalysis/jpa.h")

# Format : Dict with key = (variable name, title for plot, binning for plot)
#                    val = bamboo variable

# ---------------------- 2b2Wj ----------------------- #
def returnClassicInputs_2b2Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_float(1),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  jet2.pt,
           ('bj2eta',                  'bj2_eta',                  (20,0.,3.2)):   jet2.eta,
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    jet2.btagDeepFlavB,
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  jet4.pt,
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    jet4.btagDeepFlavB,
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.deltaR(jet2.p4, lep.p4),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet2.p4, lep.p4)),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet2, self.corrMET)),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  (self.HLL.bJetCorrP4(jet1)+self.HLL.bJetCorrP4(jet2)).Pt(),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.invariant_mass(self.HLL.bJetCorrP4(jet1),self.HLL.bJetCorrP4(jet2)),
           ##('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,1.)):    self.HLL.comp_cosThetaS(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(self.HLL.bJetCorrP4(jet1),lep.p4 ,self.corrMET.p4), 
                                                                                           self.HLL.mT2(self.HLL.bJetCorrP4(jet2), lep.p4, self.corrMET.p4)),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet3, self.corrMET)),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.deltaR(jet4.p4, lep.p4),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet4.p4, lep.p4)),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet4, self.corrMET)),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  (jet3.p4 + jet4.p4).Pt(),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.invariant_mass(jet3.p4, jet4.p4),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  self.HLL.MT_W1W2_ljj(lep,jet3,jet4, self.corrMET),
           #('HWW_Mass',                 'HWW_Mass',                 (50,0.,500.)):  self.HLL.HWW_simple(jet3.p4,jet4.p4,lep.p4,self.corrMET).M(),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.extMethod("HHbbWWJPA::HWW_SimpleMassWithRecoNeutrino", returnType="float")(jet3.p4, jet4.p4, lep.p4, self.corrMET.p4),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4,self.corrMET.p4).M(),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    self.HLL.dR_Hww(jet3.p4,jet4.p4,lep.p4,self.corrMET),
           ##('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,1.)):    self.HLL.comp_cosThetaS(jet3.p4, jet4.p4),
           ##('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,1.)):    self.HLL.comp_cosThetaS(self.HLL.Wjj_simple(jet3.p4,jet4.p4), self.HLL.Wlep_met_simple(lep.p4, self.corrMET.p4)),
           ##('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,1.)):    self.HLL.comp_cosThetaS(self.HLL.bJetCorrP4(jet1)+self.HLL.bJetCorrP4(jet2),self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4, self.corrMET.p4)),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(jet3.p4, jet4.p4),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.Wjj_simple(jet3.p4,jet4.p4), self.HLL.Wlep_met_simple(lep.p4, self.corrMET.p4)),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.bJetCorrP4(jet1)+self.HLL.bJetCorrP4(jet2),self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4, self.corrMET.p4)),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    self.HLL.angleWWplane(lep.p4, self.corrMET, jet3.p4, jet4.p4),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    self.HLL.angleBetPlanes(jet1.p4,jet2.p4,jet3.p4,jet4.p4),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet2.p4),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet2.p4)),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.deltaR(jet2.p4,jet3.p4),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet2.p4,jet3.p4)),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.deltaR(jet3.p4,jet4.p4),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4,jet4.p4)),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet4.p4),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet4.p4)),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet3.p4),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet3.p4)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta), op.c_float(0.)),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    self.HLL.MinDiJetDRTight(jet1,jet2,jet3,jet4),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    self.HLL.MinDR_lep4j(lep,jet1,jet2,jet3,jet4)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_2b2Wj(lep,jet1,jet2,jet3,jet4,self.corrMET)}

def returnLBNInputs_2b2Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    jet2.p4.E(),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): jet2.p4.Px(),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): jet2.p4.Py(),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): jet2.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    jet4.p4.E(),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): jet4.p4.Px(),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): jet4.p4.Py(),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): jet4.p4.Pz()}

# ---------------------- 2b1Wj ----------------------- #
def returnClassicInputs_2b1Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(2),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  jet2.pt,
           ('bj2eta',                  'bj2_eta',                  (20,0.,3.2)):   jet2.eta,
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    jet2.btagDeepFlavB,
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('nAk4BJets',                'nAk8BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.deltaR(jet2.p4, lep.p4),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet2.p4, lep.p4)),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet2, self.corrMET)),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  (self.HLL.bJetCorrP4(jet1)+self.HLL.bJetCorrP4(jet2)).Pt(),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.invariant_mass(self.HLL.bJetCorrP4(jet1),self.HLL.bJetCorrP4(jet2)),
           ##('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    self.HLL.comp_cosThetaS(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(self.HLL.bJetCorrP4(jet1),lep.p4 ,self.corrMET.p4), self.HLL.mT2(self.HLL.bJetCorrP4(jet2), lep.p4, self.corrMET.p4)),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet3, self.corrMET)),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    op.c_float(0.),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet2.p4),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet2.p4)),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.deltaR(jet2.p4,jet3.p4),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet2.p4,jet3.p4)),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet3.p4),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet3.p4)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta),op.static_cast("Float_t",op.c_float(0.))),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    self.HLL.MinDiJetDRLoose(jet1,jet2,jet3),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    self.HLL.MinDR_lep3j(lep,jet1,jet2,jet3)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_2b1Wj(lep,jet1,jet2,jet3,self.corrMET)}

def returnLBNInputs_2b1Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    jet2.p4.E(),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): jet2.p4.Px(),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): jet2.p4.Py(),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): jet2.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}

# ---------------------- 2b0Wj ----------------------- #
def returnClassicInputs_2b0Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(3),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  jet2.pt,
           ('bj2eta',                  'bj2_eta',                  (20,0.,3.2)):   jet2.eta,
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    jet2.btagDeepFlavB,
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_int(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.deltaR(jet2.p4, lep.p4),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet2.p4, lep.p4)),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet2, self.corrMET)),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  (self.HLL.bJetCorrP4(jet1)+self.HLL.bJetCorrP4(jet2)).Pt(),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.invariant_mass(self.HLL.bJetCorrP4(jet1),self.HLL.bJetCorrP4(jet2)),
           ##('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    self.HLL.comp_cosThetaS(self.HLL.bJetCorrP4(jet1), self.HLL.bJetCorrP4(jet2)),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(self.HLL.bJetCorrP4(jet1),lep.p4 ,self.corrMET.p4), self.HLL.mT2(self.HLL.bJetCorrP4(jet2), lep.p4, self.corrMET.p4)),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    op.c_float(0.),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet2.p4),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet2.p4)),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta),op.static_cast("Float_t",op.c_float(0.))),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    op.deltaR(jet1.p4,jet2.p4),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    self.HLL.MinDR_lep2j(lep,jet1,jet2)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_2b0Wj(lep,jet1,jet2,self.corrMET)}

def returnLBNInputs_2b0Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    jet2.p4.E(),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): jet2.p4.Px(),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): jet2.p4.Py(),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): jet2.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}


# ---------------------- 1b2Wj ----------------------- #
def returnClassicInputs_1b2Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(4),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2eta',                  'bj2_eta',                  (20,0.,3.2)):   op.c_float(0.),
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  jet4.pt,
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    jet4.btagDeepFlavB,
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_int(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.c_float(0.),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    op.c_float(0.),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.c_float(0.),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet3, self.corrMET)),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.deltaR(jet4.p4, lep.p4),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet4.p4, lep.p4)),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet4, self.corrMET)),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  (jet3.p4 + jet4.p4).Pt(),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.invariant_mass(jet3.p4, jet4.p4),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  self.HLL.MT_W1W2_ljj(lep,jet3,jet4, self.corrMET),
           #('HWW_Mass',                 'HWW_Mass',                 (50,0.,500.)):  self.HLL.HWW_simple(jet3.p4,jet4.p4,lep.p4,self.corrMET).M(),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.extMethod("HHbbWWJPA::HWW_SimpleMassWithRecoNeutrino", returnType="float")(jet3.p4, jet4.p4, lep.p4, self.corrMET.p4),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4,self.corrMET.p4).M(),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    self.HLL.dR_Hww(jet3.p4,jet4.p4,lep.p4,self.corrMET),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.static_cast("Float_t", self.HLL.comp_cosThetaS(jet3.p4, jet4.p4)),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.static_cast("Float_t", self.HLL.comp_cosThetaS(self.HLL.Wjj_simple(jet3.p4,jet4.p4), self.HLL.Wlep_met_simple(lep.p4, self.corrMET.p4))),
           ##('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(jet3.p4, jet4.p4),
           ##('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.Wjj_simple(jet3.p4,jet4.p4), self.HLL.Wlep_met_simple(lep.p4, self.corrMET.p4)),
           ##('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    self.HLL.angleWWplane(lep.p4, self.corrMET, jet3.p4, jet4.p4),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.deltaR(jet3.p4,jet4.p4),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4,jet4.p4)),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet4.p4),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet4.p4)),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet3.p4),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet3.p4)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta),op.static_cast("Float_t",op.c_float(0.))),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    self.HLL.MinDiJetDRLoose(jet1,jet3,jet4),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    self.HLL.MinDR_lep3j(lep,jet1,jet3,jet4)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_1b2Wj(lep,jet1,jet3,jet4,self.corrMET)}

def returnLBNInputs_1b2Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    jet4.p4.E(),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): jet4.p4.Px(),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): jet4.p4.Py(),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): jet4.p4.Pz()}

# ---------------------- 1b1Wj ----------------------- #
def returnClassicInputs_1b1Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(5),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],           
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2eta',                   'bj2_eta',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_int(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.c_float(0.),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    op.c_float(0.),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.c_float(0.),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet3, self.corrMET)),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    op.c_float(0.),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.deltaR(jet1.p4,jet3.p4),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4,jet3.p4)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta),op.static_cast("Float_t",op.c_float(0.))),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    op.deltaR(jet1.p4,jet3.p4),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    self.HLL.MinDR_lep2j(lep,jet1,jet3)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_1b1Wj(lep,jet1,jet3,self.corrMET)}

def returnLBNInputs_1b1Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}

# ---------------------- 1b0Wj ----------------------- #
def returnClassicInputs_1b0Wj(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(6),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],                      
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  jet1.pt,
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    jet1.btagDeepFlavB,
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2eta',                   'bj2_eta',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.rng_len(self.ak4BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_int(op.rng_len(VBFJetPairs) > 0),
           #('lepmet_DPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.deltaR(jet1.p4, lep.p4),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet1.p4, lep.p4)),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(jet1, self.corrMET)),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.c_float(0.),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    op.c_float(0.),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.c_float(0.),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    op.c_float(0.),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta),op.static_cast("Float_t",op.c_float(0.))),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    op.c_float(0.),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    op.deltaR(lep.p4, jet1.p4)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  self.HLL.HT2_1b0Wj(lep,jet1,self.corrMET)}

def returnLBNInputs_1b0Wj(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    jet1.p4.E(),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): jet1.p4.Px(),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): jet1.p4.Py(),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): jet1.p4.Pz(),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}

# ---------------------- 0b ----------------------- #
def returnClassicInputs_0b(self, lep, jet1, jet2, jet3, jet4, VBFJetPairs, L2Scores):
    return{('leppdgId',                'leppdgId',                (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',               (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                   (9,0.,8.)):     op.c_int(7),
           ('L22b2Wj',                 'L2_2b2Wj',                 (10,0,1.)):     L2Scores[0],
           ('L22b1Wj',                 'L2_2b1Wj',                 (10,0,1.)):     L2Scores[1],
           ('L22b0Wj',                 'L2_2b0Wj',                 (10,0,1.)):     L2Scores[2],
           ('L21b2Wj',                 'L2_1b2Wj',                 (10,0,1.)):     L2Scores[3],
           ('L21b1Wj',                 'L2_1b1Wj',                 (10,0,1.)):     L2Scores[4],
           ('L21b0Wj',                 'L2_1b0Wj',                 (10,0,1.)):     L2Scores[5],
           ('L20b',                    'L2_0b',                    (10,0,1.)):     L2Scores[6],
           ('METpt',                    'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('bj1pt',                   'bj1_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('bj1bTagDeepFlavB',        'bj1_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('bj2pt',                   'bj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2eta',                   'bj2_eta',                   (50,0.,500.)):  op.c_float(0.),
           ('bj2bTagDeepFlavB',        'bj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj1pt',                   'wj1_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj2pt',                   'wj2_pt',                   (50,0.,500.)):  op.c_float(0.),
           ('wj2bTagDeepFlavB',        'wj2_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('nAk4BJets',                'nAk4BJets',                (6,0.,5.)):     op.c_float(0.),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(0.),
           #('lepmetDPhi',              'lepmet_DPhi',              (50,0.,4.)):    op.abs(self.HLL.SinglepMet_dPhi(lep,self.corrMET)),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('bj1LepDR',                 'bj1LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('bj1LepDPhi',               'bj1LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('bj1MetDPhi',               'bj1MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('minDRlepallJets',        'minDRlepallJets',        (50,0.,5.)):    self.HLL.mindr_lep1_jet(lep, self.ak4Jets),
           ('bj2LepDR',                 'bj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('bj2LepDPhi',               'bj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('bj2MetDPhi',               'bj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('bj1bj2pt',                'bj1bj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('bj1bj2M',                 'bj1bj2_M',                 (50,0.,500.)):  op.c_float(0.),
           #('cosThetaS_Hbb',            'cosThetaS_Hbb',            (50,0.,5.)):    op.c_float(0.),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.c_float(0.),
           ('wj1LepDR',                 'wj1LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj1LepDPhi',               'wj1LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj1MetDPhi',               'wj1MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj2LepDR',                 'wj2LepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj2LepDPhi',               'wj2LepDPhi',               (50,0.,4.)):    op.c_float(0.),
           #('wj2MetDPhi',               'wj2MetDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2M',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('w1w2MT',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('HWWMass',                 'HWW_Mass',                 (50,0.,500.)):  op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('HWWdR',                   'HWW_dR',                   (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_Wjj_simple',     'cosThetaS_Wjj_simple',     (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_WW_simple_met',  'cosThetaS_WW_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('cosThetaS_HH_simple_met',  'cosThetaS_HH_simple_met',  (50,0.,5.)):    op.c_float(0.),
           #('angleBetWWPlane',          'angleBetWWPlane',          (50,0.,5.)):    op.c_float(0.),
           #('angleBetHWPlane',          'angleBetHWPlane',          (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DR',                'bj1bj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1bj2DPhi',              'bj1bj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj2wj1DR',                'bj2wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj2wj1DPhi',              'bj2wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2DR',                'wj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('wj1wj2DPhi',              'wj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj2DR',                'bj1wj2_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj2DPhi',              'bj1wj2_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('bj1wj1DR',                'bj1wj1_DR',                (50,0.,5.)):    op.c_float(0.),
           ('bj1wj1DPhi',              'bj1wj1_DPhi',              (50,0.,4.)):    op.c_float(0.),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.c_float(0.),
           ('minJetDR',                 'minJetDR',                 (50,0.,5.)):    op.c_float(0.),
           ('minLepJetDR',              'minLepJetDR',              (50,0.,5.)):    op.c_float(0.)}
           #('HT2_lepJetMet',            'HT2_lepJetMet',            (50,0.,500.)):  op.c_float(0.)}

def returnLBNInputs_0b(self,lep,jet1,jet2,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('b1j_E',   'b1j_E',   (50,0.,500.)):    op.c_float(0.),
           ('b1j_Px',  'b1j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('b1j_Py',  'b1j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('b1j_Pz',  'b1j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_E',   'b2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('b2j_Px',  'b2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Py',  'b2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('b2j_Pz',  'b2j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}


# ---------------------- Hbb2Wj ----------------------- #
def returnClassicInputs_Hbb2Wj(self, lep, fjet, jet3, jet4, VBFJetPairs, L2Scores, era):
    return{('era',                     'era',                      (3,2016.,2019.)): op.c_float(float(era)),
           ('leppdgId',                'leppdgId',                 (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',                (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                  (9,0.,8.)):     op.c_float(1),
           ('L2Hbb2Wj',                 'L2_Hbb2Wj',               (10,0,1.)):     L2Scores[0],
           ('L2Hbb1Wj',                 'L2_Hbb1Wj',               (10,0,1.)):     L2Scores[1],
           ('L2Hbb0Wj',                 'L2_Hbb0Wj',               (10,0,1.)):     L2Scores[2],
           ('METpt',                    'METpt',                   (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('fatbjpt',                   'fatbjpt',                (50,0.,500.)):  fjet.pt,
           ('fatbjsoftdropMass',        'fatbjsoftdropMass',       (50,0.,1.)):    fjet.msoftdrop,
           #('fatbjbtagDeepB',              'fatbjbtagDeepB',       (50,0.,1.)):    fjet.btagDeepB,
           ('wj1pt',                   'wj1pt',                    (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2pt',                    (50,0.,500.)):  jet4.pt,
           ('nAk8Jets',                'nAk8Jets',                 (6,0.,5.)):     op.rng_len(self.ak8Jets),
           ('nAk8BJets',                'nAk8BJets',               (6,0.,5.)):     op.rng_len(self.ak8BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(op.rng_len(VBFJetPairs) > 0),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('fatbjlepDR',                 'fatbjlepDR',                 (50,0.,5.)):    op.deltaR(fjet.p4, lep.p4),
           ('fatbjWj1DR',                 'fatbjWj1DR',                 (50,0.,5.)):    op.deltaR(fjet.p4, jet3.p4),
           ('fatbjwj2DR',                 'fatbjwj2DR',                 (50,0.,5.)):    op.deltaR(fjet.p4, jet4.p4),
           ('wj1lepDR',                 'wj1lepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1lepDPhi',               'wj1lepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  (jet3.p4 + jet4.p4).Pt(),
           ('wj1wj2invM',                 'wj1wj2_M',                 (50,0.,500.)):  op.invariant_mass(jet3.p4, jet4.p4),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(fjet.subJet1.p4, lep.p4 ,self.corrMET.p4), 
                                                                                           self.HLL.mT2(fjet.subJet2.p4, lep.p4, self.corrMET.p4)),
           ('HWplaneAngle',          'angleBetHWPlane',          (50,0.,5.)):    self.HLL.angleBetPlanes(fjet.subJet1.p4,fjet.subJet2.p4,jet3.p4,jet4.p4),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4,self.corrMET.p4).M(),
           ('cosThetaSWWsimplemet',  'cosThetaS_WW_simple_met',  (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(self.HLL.Wjj_simple(jet3.p4,jet4.p4), self.HLL.Wlep_met_simple(lep.p4, self.corrMET.p4)),
           ('cosThetaSHHsimplemet',  'cosThetaS_HH_simple_met',  (50,0.,1.)):    op.extMethod("HHbbWWJPA::cosThetaS", returnType="float")(fjet.subJet1.p4+fjet.subJet2.p4,self.HLL.HWW_met_simple(jet3.p4,jet4.p4,lep.p4, self.corrMET.p4)),
           ('MTW1W2',                  'w1w2_MT',                  (50,0.,500.)):  self.HLL.MT_W1W2_ljj(lep,jet3,jet4, self.corrMET),
           ('VBFj1pt',                 'VBFj1pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt, VBFJetPairs[0][1].pt),op.c_float(0.)),
           ('VBFj2pt',                 'VBFj2pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt),op.c_float(0.)),
           ('VBFj1j2dPhi',              'VBFj1j2dPhi',              (50,0.,500.)): op.switch(op.rng_len(VBFJetPairs) > 0,op.abs(op.deltaPhi(VBFJetPairs[0][0].p4,VBFJetPairs[0][1].p4)),op.c_float(0.)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta), op.c_float(0.))}

def returnLBNInputs_Hbb2Wj(self,lep,fjet,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('fatbj_E',   'fatbj_E',   (50,0.,500.)):    fjet.p4.E(),
           ('fatbj_Px',  'b1j_Px',  (50,-250.,250.)): fjet.p4.Px(),
           ('fatbj_Py',  'b1j_Py',  (50,-250.,250.)): fjet.p4.Py(),
           ('fatbj_Pz',  'b1j_Pz',  (50,-250.,250.)): fjet.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    jet4.p4.E(),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): jet4.p4.Px(),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): jet4.p4.Py(),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): jet4.p4.Pz()}

# ---------------------- Hbb1Wj ----------------------- #
def returnClassicInputs_Hbb1Wj(self, lep, fjet, jet3, jet4, VBFJetPairs, L2Scores, era):
    return{('era',                     'era',                      (3,2016.,2019.)): op.c_float(float(era)),
           ('leppdgId',                'leppdgId',                 (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',                (3,-1,1.)):     lep.charge,
           ('JPAcat',                   'JPAcat',                  (9,0.,8.)):     op.c_float(2),
           ('L2Hbb2Wj',                 'L2_Hbb2Wj',               (10,0,1.)):     L2Scores[0],
           ('L2Hbb1Wj',                 'L2_Hbb1Wj',               (10,0,1.)):     L2Scores[1],
           ('L2Hbb0Wj',                 'L2_Hbb0Wj',               (10,0,1.)):     L2Scores[2],
           ('METpt',                    'METpt',                   (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('fatbjpt',                   'fatbjpt',                (50,0.,500.)):  fjet.pt,
           ('fatbjsoftdropMass',        'fatbjsoftdropMass',       (50,0.,1.)):    fjet.msoftdrop,
           #('fatbjbtagDeepB',              'fatbjbtagDeepB',       (50,0.,1.)):    fjet.btagDeepB,
           ('wj1pt',                   'wj1pt',                    (50,0.,500.)):  jet3.pt,
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    jet3.btagDeepFlavB,
           ('wj2pt',                   'wj2pt',                    (50,0.,500.)):  op.c_float(0.),
           ('nAk8Jets',                'nAk8Jets',                 (6,0.,5.)):     op.rng_len(self.ak8Jets),
           ('nAk8BJets',                'nAk8BJets',               (6,0.,5.)):     op.rng_len(self.ak8BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(op.rng_len(VBFJetPairs) > 0),
           ('hT',                       'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('fatbjlepDR',                 'fatbjlepDR',                 (50,0.,5.)):    op.deltaR(fjet.p4, lep.p4),
           ('fatbjWj1DR',                 'fatbjWj1DR',                 (50,0.,5.)):    op.deltaR(fjet.p4, jet3.p4),
           ('fatbjwj2DR',                 'fatbjwj2DR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj1lepDR',                 'wj1lepDR',                 (50,0.,5.)):    op.deltaR(jet3.p4, lep.p4),
           ('wj1lepDPhi',               'wj1lepDPhi',               (50,0.,4.)):    op.abs(op.deltaPhi(jet3.p4, lep.p4)),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):   op.c_float(0.),
           ('wj1wj2invM',                 'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('mTtop3particle',         'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(fjet.subJet1.p4, lep.p4 ,self.corrMET.p4), 
                                                                                           self.HLL.mT2(fjet.subJet2.p4, lep.p4, self.corrMET.p4)),
           ('HWplaneAngle',          'angleBetHWPlane',          (50,0.,5.)):     op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):  op.c_float(0.),
           ('cosThetaSWWsimplemet',  'cosThetaS_WW_simple_met',  (50,0.,1.)):     op.c_float(0.),
           ('cosThetaSHHsimplemet',  'cosThetaS_HH_simple_met',  (50,0.,1.)):     op.c_float(0.),
           ('MTW1W2',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('VBFj1pt',                 'VBFj1pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt, VBFJetPairs[0][1].pt),op.c_float(0.)),
           ('VBFj2pt',                 'VBFj2pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt),op.c_float(0.)),
           ('VBFj1j2dPhi',              'VBFj1j2dPhi',              (50,0.,500.)): op.switch(op.rng_len(VBFJetPairs) > 0,op.abs(op.deltaPhi(VBFJetPairs[0][0].p4,VBFJetPairs[0][1].p4)),op.c_float(0.)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):    op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta), op.c_float(0.))}

def returnLBNInputs_Hbb1Wj(self,lep,fjet,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('fatbj_E',   'fatbj_E',   (50,0.,500.)):  fjet.p4.E(),
           ('fatbj_Px',  'b1j_Px',  (50,-250.,250.)): fjet.p4.Px(),
           ('fatbj_Py',  'b1j_Py',  (50,-250.,250.)): fjet.p4.Py(),
           ('fatbj_Pz',  'b1j_Pz',  (50,-250.,250.)): fjet.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    jet3.p4.E(),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): jet3.p4.Px(),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): jet3.p4.Py(),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): jet3.p4.Pz(),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}

# ---------------------- Hbb0Wj ----------------------- #
def returnClassicInputs_Hbb0Wj(self, lep, fjet, jet3, jet4, VBFJetPairs, L2Scores, era):
    return{('era',                     'era',                      (3,2016.,2019.)): op.c_float(float(era)),
           ('leppdgId',                'leppdgId',                 (45,-22.,22.)): lep.pdgId,
           ('lepcharge',               'lepcharge',                (3,-1,1.)):     lep.charge,
           ('JPAcat',                  'JPAcat',                   (9,0.,8.)):     op.c_float(2),
           ('L2Hbb2Wj',                'L2_Hbb2Wj',                (10,0,1.)):     L2Scores[0],
           ('L2Hbb1Wj',                'L2_Hbb1Wj',                (10,0,1.)):     L2Scores[1],
           ('L2Hbb0Wj',                'L2_Hbb0Wj',                (10,0,1.)):     L2Scores[2],
           ('METpt',                   'METpt',                    (50,0.,500.)):  self.corrMET.pt,
           ('leppt',                   'lep_pt',                   (50,0.,500.)):  lep.pt,
           ('fatbjpt',                 'fatbjpt',                  (50,0.,500.)):  fjet.pt,
           ('fatbjsoftdropMass',       'fatbjsoftdropMass',        (50,0.,1.)):    fjet.msoftdrop,
           #('fatbjbtagDeepB',         'fatbjbtagDeepB',           (50,0.,1.)):    fjet.btagDeepB,
           ('wj1pt',                   'wj1pt',                    (50,0.,500.)):  op.c_float(0.),
           ('wj1bTagDeepFlavB',        'wj1_bTagDeepFlavB',        (50,0.,1.)):    op.c_float(0.),
           ('wj2pt',                   'wj2pt',                    (50,0.,500.)):  op.c_float(0.),
           ('nAk8Jets',                'nAk8Jets',                 (6,0.,5.)):     op.rng_len(self.ak8Jets),
           ('nAk8BJets',               'nAk8BJets',                (6,0.,5.)):     op.rng_len(self.ak8BJets),
           ('VBFtag',                  'VBF_tag',                  (2,0.,2.)):     op.c_float(op.rng_len(VBFJetPairs) > 0),
           ('hT',                      'hT',                       (50,0.,500.)):  self.HLL.HT_SL(self.ak4Jets),
           ('lepmetpt',                'lepmet_pt',                (50,0.,500.)):  self.HLL.SinglepMet_Pt(lep,self.corrMET),
           ('lepMT',                   'lep_MT',                   (50,0.,500.)):  self.HLL.MT(lep,self.corrMET),
           ('METLD',                   'MET_LD',                   (50,0.,500.)):  self.HLL.MET_LD_DL(self.corrMET, self.ak4Jets, self.electronsFakeSel, self.muonsFakeSel),
           ('fatbjlepDR',              'fatbjlepDR',               (50,0.,5.)):    op.deltaR(fjet.p4, lep.p4),
           ('fatbjWj1DR',              'fatbjWj1DR',               (50,0.,5.)):    op.c_float(0.),
           ('fatbjwj2DR',              'fatbjwj2DR',               (50,0.,5.)):    op.c_float(0.),
           ('wj1lepDR',                'wj1lepDR',                 (50,0.,5.)):    op.c_float(0.),
           ('wj1lepDPhi',              'wj1lepDPhi',               (50,0.,4.)):    op.c_float(0.),
           ('wj1wj2pt',                'wj1wj2_pt',                (50,0.,500.)):  op.c_float(0.),
           ('wj1wj2invM',              'wj1wj2_M',                 (50,0.,500.)):  op.c_float(0.),
           ('mTtop3particle',          'mT_top_3particle',         (50,0.,500.)):  op.min(self.HLL.mT2(fjet.subJet1.p4, lep.p4 ,self.corrMET.p4), 
                                                                                          self.HLL.mT2(fjet.subJet2.p4, lep.p4, self.corrMET.p4)),
           ('HWplaneAngle',          'angleBetHWPlane',          (50,0.,5.)):      op.c_float(0.),
           ('HWWSimpleMass',          'HWW_Simple_Mass',          (50,0.,500.)):   op.c_float(0.),
           ('cosThetaSWWsimplemet',  'cosThetaS_WW_simple_met',  (50,0.,1.)):      op.c_float(0.),
           ('cosThetaSHHsimplemet',  'cosThetaS_HH_simple_met',  (50,0.,1.)):      op.c_float(0.),
           ('MTW1W2',                  'w1w2_MT',                  (50,0.,500.)):  op.c_float(0.),
           ('VBFj1pt',                 'VBFj1pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt, VBFJetPairs[0][1].pt),op.c_float(0.)),
           ('VBFj2pt',                 'VBFj2pt',                  (50,0.,500.)):  op.switch(op.rng_len(VBFJetPairs) > 0, op.switch(VBFJetPairs[0][0].pt > VBFJetPairs[0][1].pt, VBFJetPairs[0][1].pt, VBFJetPairs[0][0].pt),op.c_float(0.)),
           ('VBFj1j2dPhi',              'VBFj1j2dPhi',              (50,0.,500.)): op.switch(op.rng_len(VBFJetPairs) > 0,op.abs(op.deltaPhi(VBFJetPairs[0][0].p4,VBFJetPairs[0][1].p4)),op.c_float(0.)),
           ('zeppenfeldVar',            'zeppenfeldVar',            (50,0.,5.)):   op.switch(op.rng_len(VBFJetPairs) > 0, op.abs(lep.eta - (VBFJetPairs[0][0].eta + VBFJetPairs[0][1].eta)/2.0)/op.abs(VBFJetPairs[0][0].eta - VBFJetPairs[0][1].eta), op.c_float(0.))}

def returnLBNInputs_Hbb0Wj(self,lep,fjet,jet3,jet4):
    return{('lep_E',   'lep_E',   (50,0.,500.)):    lep.p4.E(),
           ('lep_Px',  'lep_Px',  (50,-250.,250.)): lep.p4.Px(),
           ('lep_Py',  'lep_Py',  (50,-250.,250.)): lep.p4.Py(),
           ('lep_Pz',  'lep_Pz',  (50,-250.,250.)): lep.p4.Pz(),
           ('fatbj_E',   'fatbj_E',   (50,0.,500.)):  fjet.p4.E(),
           ('fatbj_Px',  'b1j_Px',  (50,-250.,250.)): fjet.p4.Px(),
           ('fatbj_Py',  'b1j_Py',  (50,-250.,250.)): fjet.p4.Py(),
           ('fatbj_Pz',  'b1j_Pz',  (50,-250.,250.)): fjet.p4.Pz(),
           ('w1j_E',   'w1j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w1j_Px',  'w1j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Py',  'w1j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w1j_Pz',  'w1j_Pz',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_E',   'w2j_E',   (50,0.,500.)):    op.c_float(0.),
           ('w2j_Px',  'w2j_Px',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Py',  'w2j_Py',  (50,-250.,250.)): op.c_float(0.),
           ('w2j_Pz',  'w2j_Pz',  (50,-250.,250.)): op.c_float(0.)}



def returnEventNr(self,t):
    return {('evennr','Event number',(100,0.,1e6)): t.event}
    
def inputStaticCast(inputDict,cast='float'):
    return [op.static_cast(cast,v) for v in inputDict.values()]
